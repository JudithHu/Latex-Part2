c2 : 1/4;

o(x) := A*sin(x);
f(u) := 1+u+c2*u^2+b*u^3;
g(u) := 1-u+c2*u^2+c*u^3;
invf(u) := 1+(1-f(u))+(1-f(u))^2+(1-f(u))^3;
invg(u) := 1+(1-g(u))+(1-g(u))^2+(1-f(u))^3;
p(x) := f(o(x));
q(x) := g(o(x));
pp(x) := diff(p(x),x,2);
qq(x) := diff(q(x),x,2);
e(x) := pp(x)*invf(o(x))+qq(x)*invg(o(x));
rms : sqrt(integrate(e(x)^2,x,0,2*%pi));
/* float(taylor(rms,A,0,2)/A^2/sqrt(%pi)); */
float(taylor(rms,A,0,2)/(sqrt(%pi)));

/*
f(u) := 1+u;
g(u) := 1-u;

  gives rms=sqrt(3)A^2+...

f(u) := 1+u+b*u^2;
g(u) := 1-u+c*u^2;

  result for mean square error is propto sqrt of
    c^2+b^2-b-c+2bc+3/4
  No real roots for b=c or b=-c.

  maxima -r "diff(c^2+b^2-b-c+2*b*c+3/4,b)^2+diff(c^2+b^2-b-c+2*b*c+3/4,c)^2;"

  squared gradient is 2 (2 c + 2 b - 1)^2; setting this equal to zero gives b+c=1/2,
       and substituting this constraint back in gives
         maxima -r "b:1/2-c; ratexpand(c^2+b^2-b-c+2*b*c+3/4);"
       which is 1/2; so for symmetry may as well take b=c=1/4, so this is
       the best we can do for minimizing the error; result is rms=sqrt(2)A^2+...

*/
